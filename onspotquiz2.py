# -*- coding: utf-8 -*-
"""Untitled14.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FUsI4dAmcEE7NN73dM8bpcDkqid2ZJrP
"""

import pandas as pd
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt
train_dataset_path = '/content/DSAILVA-TRAIN Data - Wheat.csv'
train_df = pd.read_csv(train_dataset_path)


test_dataset_path = '/content/DSAILVA-TEST Data - Wheat.csv'
test_df = pd.read_csv(test_dataset_path)
train_df.head(),test_df.head()

X_train = train_df[['Length of kernel', 'Width of kernel']]
X_test = test_df[['Length of kernel', 'Width of kernel']]
X_train,X_test
wcss = []
for i in range(1, 11):
    kmeans = KMeans(n_clusters=i, init='k-means++', max_iter=300, n_init=10, random_state=0)
    kmeans.fit(X_train)
    wcss.append(kmeans.inertia_)

# Plotting the Elbow graph for the training data
plt.figure(figsize=(10, 5))
plt.plot(range(1, 11), wcss)
plt.title('Elbow K')
plt.xlabel('Number of Clusters')
plt.ylabel('WCSS')
plt.xticks(range(1, 11))
plt.grid(True)
plt.show()

optimal_k = 3


kmeans = KMeans(n_clusters=optimal_k, init='k-means++', max_iter=300, n_init=10, random_state=0)
train_df['Cluster'] = kmeans.fit_predict(X_train)
test_df['Cluster'] = kmeans.predict(X_test)


def plot_clusters(df, title):
    plt.figure(figsize=(12, 7))
    colors = ['red', 'blue', 'green']
    for i in range(optimal_k):
        plt.scatter(df[df['Cluster'] == i]['Length of kernel'],
                    df[df['Cluster'] == i]['Width of kernel'],
                    s=100, c=colors[i], label=f'Cluster {i+1}')
    plt.scatter(kmeans.cluster_centers_[:, 0], kmeans.cluster_centers_[:, 1],
                s=300, c='yellow', label='Centroids', marker='X')
    plt.title(title)
    plt.xlabel('Length')
    plt.ylabel('Width')
    plt.legend()
    plt.show()


plot_clusters(train_df, 'wheat variety cluster (Training Data)')


plot_clusters(test_df, 'wheat variety cluster (Test Data)')

