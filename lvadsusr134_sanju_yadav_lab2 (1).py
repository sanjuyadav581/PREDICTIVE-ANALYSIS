# -*- coding: utf-8 -*-
"""LVADSUSR134_SANJU_YADAV_LAB2.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1DqlZUcT7CONCCVO4n5AUMqo3a8ejbtE5
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

from scipy import stats
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

data= pd.read_csv('/content/auto-mpg.csv')
data.info()

data.isnull().sum()

mpg_data=data

mpg_data.dropna(inplace=True)
mpg_data = mpg_data[mpg_data.horsepower != '?']

mpg_data['horsepower'] = mpg_data['horsepower'].astype(float)

plt.figure(figsize=(10, 7))
sns.distplot(mpg_data['mpg'])
plt.title('MPG Distribution')
plt.xlabel('mpg')
plt.ylabel('Density')
plt.show()

sns.pairplot(mpg_data[['mpg', 'cylinders', 'displacement', 'horsepower', 'weight', 'acceleration']])
plt.show()

numerical_cols = ['cylinders', 'displacement', 'horsepower', 'weight', 'acceleration']
z_scores = np.abs(stats.zscore(mpg_data[numerical_cols]))
mpg_data_clean = mpg_data[(z_scores < 3).all(axis=1)]

X = mpg_data_clean[numerical_cols]
y = mpg_data_clean['mpg']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

scaler = StandardScaler()
X_train_scaled = scaler.fit_transform(X_train)
X_test_scaled = scaler.transform(X_test)

model = LinearRegression()
model.fit(X_train_scaled, y_train)

y_pred = model.predict(X_test_scaled)
rmse = mean_squared_error(y_test, y_pred, squared=False)
r2 = r2_score(y_test, y_pred)

print(f'Root Mean Square Error: {rmse}')
print(f'R-squared: {r2}')















